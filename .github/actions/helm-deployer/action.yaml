name: Helm Deployer
description: Opens pull request against a given flux managed clusters repo modifying the specified clusters
inputs:
  repository:
    description: Flux repository to open PR against
    required: true
  cluster:
    description: Cluster to modify HelmRelease in
    required: true
  namespace:
    description: Namespace to modify HelmRelease in
    required: true
  file:
    description: File path in filesystem of HelmReleaseCRD (filename must match with filename in flux repository)
    required: true
  token:
    description: Token to access flux repo
    required: true
runs:
  using: "composite"
  steps:
    - uses: actions/github-script@v6
      env:
        file_path: ${{ inputs.file }}
        repository: ${{ inputs.repository }}
        cluster: ${{ inputs.cluster }}
        namespace: ${{ inputs.namespace }}
      with:
        github-token: ${{ inputs.token }}
        result-encoding: string
        retries: 3
        script: |

          const fs = require('fs')
          const path = require('path')

          //Read file and get basename
          const file = fs.readFileSync(process.env.file_path, 'utf8');

          const basename = path.basename(process.env.file_path)

          //Convert file to base64
          const bfile = btoa(file)

          //Get main branch sha
          const main_branch = await github.rest.git.getRef({
              owner: context.repo.owner,
              repo: process.env.repository,
              ref: 'heads/main',
          })

          //Create branch in flux repo
          const new_branch = await github.rest.git.createRef({
              owner: context.repo.owner,
              repo: process.env.repository,
              ref: 'refs/heads/hola11',
              sha: main_branch.data.object.sha,
          })
          console.log(main_branch)
          console.log(main_branch.data.object.sha)

          //Obtain file's blob sha in the branch
          const current_file = await github.rest.repos.getContent({
            owner: context.repo.owner,
            repo: process.env.repository,
            path: `clusters/${process.env.cluster}/${process.env.namespace}/${basename}`,
          });

          console.log(current_file)

          //Modify file in this new branch

          const update_response = await github.rest.repos.createOrUpdateFileContents({
            owner: context.repo.owner,
            repo: process.env.repository,
            path: `clusters/${process.env.cluster}/${process.env.namespace}/${basename}`,
            message: "Update by version xxxx of xxxxx",
            sha: current_file.data.sha,
            content: bfile,
            branch: new_branch.data.ref
          })

          //Open pull request

          const pull_request = github.rest.pulls.create({
            owner: context.repo.owner,
            repo: process.env.repository,
            head: new_branch.data.ref,
            base: 'main',
            title: 'ajaaa'
          });